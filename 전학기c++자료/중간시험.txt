
// 중간 시험 답(1)

#include <iostream>
using namespace std;

int main()
{
	new A[B];

	// 자료형 A크기를 갖는 메모리 B개를 free-store에 반환한다.

	cout << sizeof(A) * B << endl;
}


// 중간 시험 답(2)

#include <iostream>
using namespace std;

int main()
{
	if (not cin) {		// 오류가 있다면 
		cin.clear();	// 오류를 클리어한다
		while (cin.get() != '\n')
			;
		cout << "잘못된 입력입니다." << endl;
		continue;
	}
}


// 중간 시험 답(3)

#include <iostream>
using namespace std;

int main()
{
	// 지역객체에서 부른 디폴트생성자는 멤버변수의 값을 건드리지 않는다.
	// ( STACK에서 부른 생성자 ) 라는 뜻.
}


// 중간 시험 답(4)

#include <iostream>
using namespace std;

int main()
{
	// 컴파일러가 자체적으로 최적화하기 때문이다.
}


// 중간 시험 답(5)

#include <iostream>
using namespace std;

void toupper(char& c)
{
	c = std::toupper(c);		// C++ 에서는 함수오버로딩이 가능하기때문에 toupper라는 새로운 함수를 만들어도 문제없이 돌아간다. 
								// 여기서 toupper 앞에 std::를 붙혀 메인스페이스의 함수를 부르면 완벽하다.
}

int main()
{
	
}


// 중간 시험 답(6)

#include <iostream>
using namespace std;

int main()
{
	// 1

	for (int i = 0; i < 4; ++i) {
		int num;
		int val;
		for (int i = 0; i < num; ++i)
			in >> val;
	}
	
	int num;
	in >> num;
	cout << "묶음의 개수 - " << num << endl;
	int* p = new int[num];
	for (int i = 0; i < num; ++i)
		in >> p[i];
	cout << "마지막 int 값 - " << p[num - 1] << endl;

	// 2

	double sum{};
	for (int i = 0; i < num; ++i)
		sum += p[i];
	println("평균 - {:.2f}", sum / num);

	// 3

	int zeroCnt{};
	for (int i = 0; i < num; ++i)
		if (p[i] & 10 == 0)
			++zeroCnt;
	cout << "끝자리 값이 0인 개수 - " << zeroCnt << endl;
}
